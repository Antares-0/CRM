package com.powernode.crm.workbench.mapper;

import com.powernode.crm.workbench.domain.Clue;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon May 16 21:02:47 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon May 16 21:02:47 CST 2022
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon May 16 21:02:47 CST 2022
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon May 16 21:02:47 CST 2022
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon May 16 21:02:47 CST 2022
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Mon May 16 21:02:47 CST 2022
     */
    int updateByPrimaryKey(Clue record);


    /**
     * 插入一条新的记录
     * @param clue
     * @return
     */
    int insertNewClue(Clue clue);

    /**
     * 根据条件查询线索
     * @param map
     * @return
     */
    List<Clue> selectClueByConditionForPage(Map<String, Object> map);

    /**
     * 根据条件进行查询
     * @param map
     * @return
     */
    int selectClueByConditionForPageCount(Map<String, Object> map);

    /**
     * 修改线索
     * @param clue
     * @return
     */
    int updateClueById(Clue clue);

    /**
     * 通过id查找对应的线索
     * @param id
     * @return
     */
    Clue selectAllById(String id);

    /**
     * 根据id查明细信息
     */
    Clue selectClueById(String id);

    /**
     * 根据id删除clue
     * @param clueId
     * @return
     */
    int deleteClueById(String clueId);

    /**
     * 根据ids删除
     * @param ids
     * @return
     */
    int deleteClueByArray(String[] ids);



}